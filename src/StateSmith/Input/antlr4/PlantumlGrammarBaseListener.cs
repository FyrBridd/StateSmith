//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from PlantumlGrammar.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IPlantumlGrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class PlantumlGrammarBaseListener : IPlantumlGrammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.optional_any_space"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptional_any_space([NotNull] PlantumlGrammarParser.Optional_any_spaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.optional_any_space"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptional_any_space([NotNull] PlantumlGrammarParser.Optional_any_spaceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.ohs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOhs([NotNull] PlantumlGrammarParser.OhsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.ohs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOhs([NotNull] PlantumlGrammarParser.OhsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.some_ws"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSome_ws([NotNull] PlantumlGrammarParser.Some_wsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.some_ws"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSome_ws([NotNull] PlantumlGrammarParser.Some_wsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.line_end_with_hs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine_end_with_hs([NotNull] PlantumlGrammarParser.Line_end_with_hsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.line_end_with_hs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine_end_with_hs([NotNull] PlantumlGrammarParser.Line_end_with_hsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.start_end_state"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStart_end_state([NotNull] PlantumlGrammarParser.Start_end_stateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.start_end_state"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStart_end_state([NotNull] PlantumlGrammarParser.Start_end_stateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.state_id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterState_id([NotNull] PlantumlGrammarParser.State_idContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.state_id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitState_id([NotNull] PlantumlGrammarParser.State_idContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.vertex"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVertex([NotNull] PlantumlGrammarParser.VertexContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.vertex"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVertex([NotNull] PlantumlGrammarParser.VertexContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.edge"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEdge([NotNull] PlantumlGrammarParser.EdgeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.edge"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEdge([NotNull] PlantumlGrammarParser.EdgeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.transition_event_guard_code"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTransition_event_guard_code([NotNull] PlantumlGrammarParser.Transition_event_guard_codeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.transition_event_guard_code"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTransition_event_guard_code([NotNull] PlantumlGrammarParser.Transition_event_guard_codeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.transition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTransition([NotNull] PlantumlGrammarParser.TransitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.transition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTransition([NotNull] PlantumlGrammarParser.TransitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.state_child_states"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterState_child_states([NotNull] PlantumlGrammarParser.State_child_statesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.state_child_states"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitState_child_states([NotNull] PlantumlGrammarParser.State_child_statesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.stereotype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStereotype([NotNull] PlantumlGrammarParser.StereotypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.stereotype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStereotype([NotNull] PlantumlGrammarParser.StereotypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.state_explicit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterState_explicit([NotNull] PlantumlGrammarParser.State_explicitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.state_explicit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitState_explicit([NotNull] PlantumlGrammarParser.State_explicitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.rest_of_line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRest_of_line([NotNull] PlantumlGrammarParser.Rest_of_lineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.rest_of_line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRest_of_line([NotNull] PlantumlGrammarParser.Rest_of_lineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.state_contents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterState_contents([NotNull] PlantumlGrammarParser.State_contentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.state_contents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitState_contents([NotNull] PlantumlGrammarParser.State_contentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.ignore"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIgnore([NotNull] PlantumlGrammarParser.IgnoreContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.ignore"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIgnore([NotNull] PlantumlGrammarParser.IgnoreContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.diagram_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDiagram_element([NotNull] PlantumlGrammarParser.Diagram_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.diagram_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDiagram_element([NotNull] PlantumlGrammarParser.Diagram_elementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.note_short"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNote_short([NotNull] PlantumlGrammarParser.Note_shortContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.note_short"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNote_short([NotNull] PlantumlGrammarParser.Note_shortContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.note_multiline_contents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNote_multiline_contents([NotNull] PlantumlGrammarParser.Note_multiline_contentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.note_multiline_contents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNote_multiline_contents([NotNull] PlantumlGrammarParser.Note_multiline_contentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.note_multiline"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNote_multiline([NotNull] PlantumlGrammarParser.Note_multilineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.note_multiline"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNote_multiline([NotNull] PlantumlGrammarParser.Note_multilineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.note_floating"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNote_floating([NotNull] PlantumlGrammarParser.Note_floatingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.note_floating"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNote_floating([NotNull] PlantumlGrammarParser.Note_floatingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.note"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNote([NotNull] PlantumlGrammarParser.NoteContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.note"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNote([NotNull] PlantumlGrammarParser.NoteContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.startuml"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStartuml([NotNull] PlantumlGrammarParser.StartumlContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.startuml"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStartuml([NotNull] PlantumlGrammarParser.StartumlContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.diagram"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDiagram([NotNull] PlantumlGrammarParser.DiagramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.diagram"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDiagram([NotNull] PlantumlGrammarParser.DiagramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PlantumlGrammarParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] PlantumlGrammarParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PlantumlGrammarParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] PlantumlGrammarParser.IdentifierContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
