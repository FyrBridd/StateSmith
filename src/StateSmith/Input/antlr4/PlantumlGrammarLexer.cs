//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from PlantumlGrammar.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class PlantumlGrammarLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, START_UML=13, END_UML=14, HWS=15, LINE_ENDER=16, 
		IDENTIFIER=17, DIGIT=18, STRING=19;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "IDENTIFIER_NON_DIGIT", "START_UML", "END_UML", 
		"HWS", "LINE_ENDER", "IDENTIFIER", "DIGIT", "ESCAPED_CHAR", "NON_QUOTE_CHAR", 
		"STRING_CHAR", "STRING"
	};


	public PlantumlGrammarLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public PlantumlGrammarLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'[*]'", "'->'", "'-->'", "':'", "'{'", "'}'", "'<<'", "'state'", 
		"'as'", "'>>'", "'hide empty description'", "'scale '", "'@startuml'", 
		"'@enduml'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, "START_UML", "END_UML", "HWS", "LINE_ENDER", "IDENTIFIER", "DIGIT", 
		"STRING"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PlantumlGrammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static PlantumlGrammarLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x15', '\xA9', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', 
		'\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', 
		'\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', 
		'\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', 
		'\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', 
		'\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', 
		'\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', 
		'\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x6', '\x11', 
		'\x85', '\n', '\x11', '\r', '\x11', '\xE', '\x11', '\x86', '\x3', '\x12', 
		'\x6', '\x12', '\x8A', '\n', '\x12', '\r', '\x12', '\xE', '\x12', '\x8B', 
		'\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\a', '\x13', '\x91', '\n', 
		'\x13', '\f', '\x13', '\xE', '\x13', '\x94', '\v', '\x13', '\x3', '\x14', 
		'\x3', '\x14', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', 
		'\x3', '\x16', '\x3', '\x17', '\x3', '\x17', '\x5', '\x17', '\x9F', '\n', 
		'\x17', '\x3', '\x18', '\x3', '\x18', '\a', '\x18', '\xA3', '\n', '\x18', 
		'\f', '\x18', '\xE', '\x18', '\xA6', '\v', '\x18', '\x3', '\x18', '\x3', 
		'\x18', '\x2', '\x2', '\x19', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', 
		'\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', 
		'\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', '\x2', '\x1D', 
		'\xF', '\x1F', '\x10', '!', '\x11', '#', '\x12', '%', '\x13', '\'', '\x14', 
		')', '\x2', '+', '\x2', '-', '\x2', '/', '\x15', '\x3', '\x2', '\a', '\x5', 
		'\x2', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x4', '\x2', '\v', 
		'\v', '\"', '\"', '\x4', '\x2', '\f', '\f', '\xF', '\xF', '\x3', '\x2', 
		'\x32', ';', '\x3', '\x2', '$', '$', '\x2', '\xAA', '\x2', '\x3', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '/', '\x3', '\x2', '\x2', '\x2', '\x3', '\x31', '\x3', '\x2', 
		'\x2', '\x2', '\x5', '\x35', '\x3', '\x2', '\x2', '\x2', '\a', '\x38', 
		'\x3', '\x2', '\x2', '\x2', '\t', '<', '\x3', '\x2', '\x2', '\x2', '\v', 
		'>', '\x3', '\x2', '\x2', '\x2', '\r', '@', '\x3', '\x2', '\x2', '\x2', 
		'\xF', '\x42', '\x3', '\x2', '\x2', '\x2', '\x11', '\x45', '\x3', '\x2', 
		'\x2', '\x2', '\x13', 'K', '\x3', '\x2', '\x2', '\x2', '\x15', 'N', '\x3', 
		'\x2', '\x2', '\x2', '\x17', 'Q', '\x3', '\x2', '\x2', '\x2', '\x19', 
		'h', '\x3', '\x2', '\x2', '\x2', '\x1B', 'o', '\x3', '\x2', '\x2', '\x2', 
		'\x1D', 'q', '\x3', '\x2', '\x2', '\x2', '\x1F', '{', '\x3', '\x2', '\x2', 
		'\x2', '!', '\x84', '\x3', '\x2', '\x2', '\x2', '#', '\x89', '\x3', '\x2', 
		'\x2', '\x2', '%', '\x8D', '\x3', '\x2', '\x2', '\x2', '\'', '\x95', '\x3', 
		'\x2', '\x2', '\x2', ')', '\x97', '\x3', '\x2', '\x2', '\x2', '+', '\x9A', 
		'\x3', '\x2', '\x2', '\x2', '-', '\x9E', '\x3', '\x2', '\x2', '\x2', '/', 
		'\xA0', '\x3', '\x2', '\x2', '\x2', '\x31', '\x32', '\a', ']', '\x2', 
		'\x2', '\x32', '\x33', '\a', ',', '\x2', '\x2', '\x33', '\x34', '\a', 
		'_', '\x2', '\x2', '\x34', '\x4', '\x3', '\x2', '\x2', '\x2', '\x35', 
		'\x36', '\a', '/', '\x2', '\x2', '\x36', '\x37', '\a', '@', '\x2', '\x2', 
		'\x37', '\x6', '\x3', '\x2', '\x2', '\x2', '\x38', '\x39', '\a', '/', 
		'\x2', '\x2', '\x39', ':', '\a', '/', '\x2', '\x2', ':', ';', '\a', '@', 
		'\x2', '\x2', ';', '\b', '\x3', '\x2', '\x2', '\x2', '<', '=', '\a', '<', 
		'\x2', '\x2', '=', '\n', '\x3', '\x2', '\x2', '\x2', '>', '?', '\a', '}', 
		'\x2', '\x2', '?', '\f', '\x3', '\x2', '\x2', '\x2', '@', '\x41', '\a', 
		'\x7F', '\x2', '\x2', '\x41', '\xE', '\x3', '\x2', '\x2', '\x2', '\x42', 
		'\x43', '\a', '>', '\x2', '\x2', '\x43', '\x44', '\a', '>', '\x2', '\x2', 
		'\x44', '\x10', '\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\a', 'u', 
		'\x2', '\x2', '\x46', 'G', '\a', 'v', '\x2', '\x2', 'G', 'H', '\a', '\x63', 
		'\x2', '\x2', 'H', 'I', '\a', 'v', '\x2', '\x2', 'I', 'J', '\a', 'g', 
		'\x2', '\x2', 'J', '\x12', '\x3', '\x2', '\x2', '\x2', 'K', 'L', '\a', 
		'\x63', '\x2', '\x2', 'L', 'M', '\a', 'u', '\x2', '\x2', 'M', '\x14', 
		'\x3', '\x2', '\x2', '\x2', 'N', 'O', '\a', '@', '\x2', '\x2', 'O', 'P', 
		'\a', '@', '\x2', '\x2', 'P', '\x16', '\x3', '\x2', '\x2', '\x2', 'Q', 
		'R', '\a', 'j', '\x2', '\x2', 'R', 'S', '\a', 'k', '\x2', '\x2', 'S', 
		'T', '\a', '\x66', '\x2', '\x2', 'T', 'U', '\a', 'g', '\x2', '\x2', 'U', 
		'V', '\a', '\"', '\x2', '\x2', 'V', 'W', '\a', 'g', '\x2', '\x2', 'W', 
		'X', '\a', 'o', '\x2', '\x2', 'X', 'Y', '\a', 'r', '\x2', '\x2', 'Y', 
		'Z', '\a', 'v', '\x2', '\x2', 'Z', '[', '\a', '{', '\x2', '\x2', '[', 
		'\\', '\a', '\"', '\x2', '\x2', '\\', ']', '\a', '\x66', '\x2', '\x2', 
		']', '^', '\a', 'g', '\x2', '\x2', '^', '_', '\a', 'u', '\x2', '\x2', 
		'_', '`', '\a', '\x65', '\x2', '\x2', '`', '\x61', '\a', 't', '\x2', '\x2', 
		'\x61', '\x62', '\a', 'k', '\x2', '\x2', '\x62', '\x63', '\a', 'r', '\x2', 
		'\x2', '\x63', '\x64', '\a', 'v', '\x2', '\x2', '\x64', '\x65', '\a', 
		'k', '\x2', '\x2', '\x65', '\x66', '\a', 'q', '\x2', '\x2', '\x66', 'g', 
		'\a', 'p', '\x2', '\x2', 'g', '\x18', '\x3', '\x2', '\x2', '\x2', 'h', 
		'i', '\a', 'u', '\x2', '\x2', 'i', 'j', '\a', '\x65', '\x2', '\x2', 'j', 
		'k', '\a', '\x63', '\x2', '\x2', 'k', 'l', '\a', 'n', '\x2', '\x2', 'l', 
		'm', '\a', 'g', '\x2', '\x2', 'm', 'n', '\a', '\"', '\x2', '\x2', 'n', 
		'\x1A', '\x3', '\x2', '\x2', '\x2', 'o', 'p', '\t', '\x2', '\x2', '\x2', 
		'p', '\x1C', '\x3', '\x2', '\x2', '\x2', 'q', 'r', '\a', '\x42', '\x2', 
		'\x2', 'r', 's', '\a', 'u', '\x2', '\x2', 's', 't', '\a', 'v', '\x2', 
		'\x2', 't', 'u', '\a', '\x63', '\x2', '\x2', 'u', 'v', '\a', 't', '\x2', 
		'\x2', 'v', 'w', '\a', 'v', '\x2', '\x2', 'w', 'x', '\a', 'w', '\x2', 
		'\x2', 'x', 'y', '\a', 'o', '\x2', '\x2', 'y', 'z', '\a', 'n', '\x2', 
		'\x2', 'z', '\x1E', '\x3', '\x2', '\x2', '\x2', '{', '|', '\a', '\x42', 
		'\x2', '\x2', '|', '}', '\a', 'g', '\x2', '\x2', '}', '~', '\a', 'p', 
		'\x2', '\x2', '~', '\x7F', '\a', '\x66', '\x2', '\x2', '\x7F', '\x80', 
		'\a', 'w', '\x2', '\x2', '\x80', '\x81', '\a', 'o', '\x2', '\x2', '\x81', 
		'\x82', '\a', 'n', '\x2', '\x2', '\x82', ' ', '\x3', '\x2', '\x2', '\x2', 
		'\x83', '\x85', '\t', '\x3', '\x2', '\x2', '\x84', '\x83', '\x3', '\x2', 
		'\x2', '\x2', '\x85', '\x86', '\x3', '\x2', '\x2', '\x2', '\x86', '\x84', 
		'\x3', '\x2', '\x2', '\x2', '\x86', '\x87', '\x3', '\x2', '\x2', '\x2', 
		'\x87', '\"', '\x3', '\x2', '\x2', '\x2', '\x88', '\x8A', '\t', '\x4', 
		'\x2', '\x2', '\x89', '\x88', '\x3', '\x2', '\x2', '\x2', '\x8A', '\x8B', 
		'\x3', '\x2', '\x2', '\x2', '\x8B', '\x89', '\x3', '\x2', '\x2', '\x2', 
		'\x8B', '\x8C', '\x3', '\x2', '\x2', '\x2', '\x8C', '$', '\x3', '\x2', 
		'\x2', '\x2', '\x8D', '\x92', '\x5', '\x1B', '\xE', '\x2', '\x8E', '\x91', 
		'\x5', '\x1B', '\xE', '\x2', '\x8F', '\x91', '\x5', '\'', '\x14', '\x2', 
		'\x90', '\x8E', '\x3', '\x2', '\x2', '\x2', '\x90', '\x8F', '\x3', '\x2', 
		'\x2', '\x2', '\x91', '\x94', '\x3', '\x2', '\x2', '\x2', '\x92', '\x90', 
		'\x3', '\x2', '\x2', '\x2', '\x92', '\x93', '\x3', '\x2', '\x2', '\x2', 
		'\x93', '&', '\x3', '\x2', '\x2', '\x2', '\x94', '\x92', '\x3', '\x2', 
		'\x2', '\x2', '\x95', '\x96', '\t', '\x5', '\x2', '\x2', '\x96', '(', 
		'\x3', '\x2', '\x2', '\x2', '\x97', '\x98', '\a', '^', '\x2', '\x2', '\x98', 
		'\x99', '\v', '\x2', '\x2', '\x2', '\x99', '*', '\x3', '\x2', '\x2', '\x2', 
		'\x9A', '\x9B', '\n', '\x6', '\x2', '\x2', '\x9B', ',', '\x3', '\x2', 
		'\x2', '\x2', '\x9C', '\x9F', '\x5', ')', '\x15', '\x2', '\x9D', '\x9F', 
		'\x5', '+', '\x16', '\x2', '\x9E', '\x9C', '\x3', '\x2', '\x2', '\x2', 
		'\x9E', '\x9D', '\x3', '\x2', '\x2', '\x2', '\x9F', '.', '\x3', '\x2', 
		'\x2', '\x2', '\xA0', '\xA4', '\a', '$', '\x2', '\x2', '\xA1', '\xA3', 
		'\x5', '-', '\x17', '\x2', '\xA2', '\xA1', '\x3', '\x2', '\x2', '\x2', 
		'\xA3', '\xA6', '\x3', '\x2', '\x2', '\x2', '\xA4', '\xA2', '\x3', '\x2', 
		'\x2', '\x2', '\xA4', '\xA5', '\x3', '\x2', '\x2', '\x2', '\xA5', '\xA7', 
		'\x3', '\x2', '\x2', '\x2', '\xA6', '\xA4', '\x3', '\x2', '\x2', '\x2', 
		'\xA7', '\xA8', '\a', '$', '\x2', '\x2', '\xA8', '\x30', '\x3', '\x2', 
		'\x2', '\x2', '\t', '\x2', '\x86', '\x8B', '\x90', '\x92', '\x9E', '\xA4', 
		'\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
