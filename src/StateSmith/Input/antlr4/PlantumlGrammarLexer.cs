//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from PlantumlGrammar.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class PlantumlGrammarLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, START_UML=16, 
		END_UML=17, HWS=18, LINE_ENDER=19, IDENTIFIER=20, DIGIT=21, STRING=22;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "IDENTIFIER_NON_DIGIT", 
		"START_UML", "END_UML", "HWS", "LINE_ENDER", "IDENTIFIER", "DIGIT", "ESCAPED_CHAR", 
		"NON_QUOTE_CHAR", "STRING_CHAR", "STRING"
	};


	public PlantumlGrammarLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public PlantumlGrammarLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'[*]'", "'->'", "'-'", "'['", "']'", "':'", "'{'", "'}'", "'<<'", 
		"'state'", "'State'", "'as'", "'>>'", "'hide empty description'", "'scale '", 
		"'@startuml'", "'@enduml'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, "START_UML", "END_UML", "HWS", "LINE_ENDER", "IDENTIFIER", 
		"DIGIT", "STRING"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PlantumlGrammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static PlantumlGrammarLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x18', '\xB7', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', 
		'\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', 
		'\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', 
		'\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', 
		'\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', 
		'\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', 
		'\x6', '\x14', '\x93', '\n', '\x14', '\r', '\x14', '\xE', '\x14', '\x94', 
		'\x3', '\x15', '\x6', '\x15', '\x98', '\n', '\x15', '\r', '\x15', '\xE', 
		'\x15', '\x99', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\a', '\x16', 
		'\x9F', '\n', '\x16', '\f', '\x16', '\xE', '\x16', '\xA2', '\v', '\x16', 
		'\x3', '\x17', '\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', '\x18', 
		'\x3', '\x19', '\x3', '\x19', '\x3', '\x1A', '\x3', '\x1A', '\x5', '\x1A', 
		'\xAD', '\n', '\x1A', '\x3', '\x1B', '\x3', '\x1B', '\a', '\x1B', '\xB1', 
		'\n', '\x1B', '\f', '\x1B', '\xE', '\x1B', '\xB4', '\v', '\x1B', '\x3', 
		'\x1B', '\x3', '\x1B', '\x2', '\x2', '\x1C', '\x3', '\x3', '\x5', '\x4', 
		'\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', 
		'\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', 
		'\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x2', '#', '\x12', '%', '\x13', 
		'\'', '\x14', ')', '\x15', '+', '\x16', '-', '\x17', '/', '\x2', '\x31', 
		'\x2', '\x33', '\x2', '\x35', '\x18', '\x3', '\x2', '\a', '\x5', '\x2', 
		'\x43', '\\', '\x61', '\x61', '\x63', '|', '\x4', '\x2', '\v', '\v', '\"', 
		'\"', '\x4', '\x2', '\f', '\f', '\xF', '\xF', '\x3', '\x2', '\x32', ';', 
		'\x3', '\x2', '$', '$', '\x2', '\xB8', '\x2', '\x3', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'-', '\x3', '\x2', '\x2', '\x2', '\x2', '\x35', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\x37', '\x3', '\x2', '\x2', '\x2', '\x5', ';', '\x3', '\x2', '\x2', 
		'\x2', '\a', '>', '\x3', '\x2', '\x2', '\x2', '\t', '@', '\x3', '\x2', 
		'\x2', '\x2', '\v', '\x42', '\x3', '\x2', '\x2', '\x2', '\r', '\x44', 
		'\x3', '\x2', '\x2', '\x2', '\xF', '\x46', '\x3', '\x2', '\x2', '\x2', 
		'\x11', 'H', '\x3', '\x2', '\x2', '\x2', '\x13', 'J', '\x3', '\x2', '\x2', 
		'\x2', '\x15', 'M', '\x3', '\x2', '\x2', '\x2', '\x17', 'S', '\x3', '\x2', 
		'\x2', '\x2', '\x19', 'Y', '\x3', '\x2', '\x2', '\x2', '\x1B', '\\', '\x3', 
		'\x2', '\x2', '\x2', '\x1D', '_', '\x3', '\x2', '\x2', '\x2', '\x1F', 
		'v', '\x3', '\x2', '\x2', '\x2', '!', '}', '\x3', '\x2', '\x2', '\x2', 
		'#', '\x7F', '\x3', '\x2', '\x2', '\x2', '%', '\x89', '\x3', '\x2', '\x2', 
		'\x2', '\'', '\x92', '\x3', '\x2', '\x2', '\x2', ')', '\x97', '\x3', '\x2', 
		'\x2', '\x2', '+', '\x9B', '\x3', '\x2', '\x2', '\x2', '-', '\xA3', '\x3', 
		'\x2', '\x2', '\x2', '/', '\xA5', '\x3', '\x2', '\x2', '\x2', '\x31', 
		'\xA8', '\x3', '\x2', '\x2', '\x2', '\x33', '\xAC', '\x3', '\x2', '\x2', 
		'\x2', '\x35', '\xAE', '\x3', '\x2', '\x2', '\x2', '\x37', '\x38', '\a', 
		']', '\x2', '\x2', '\x38', '\x39', '\a', ',', '\x2', '\x2', '\x39', ':', 
		'\a', '_', '\x2', '\x2', ':', '\x4', '\x3', '\x2', '\x2', '\x2', ';', 
		'<', '\a', '/', '\x2', '\x2', '<', '=', '\a', '@', '\x2', '\x2', '=', 
		'\x6', '\x3', '\x2', '\x2', '\x2', '>', '?', '\a', '/', '\x2', '\x2', 
		'?', '\b', '\x3', '\x2', '\x2', '\x2', '@', '\x41', '\a', ']', '\x2', 
		'\x2', '\x41', '\n', '\x3', '\x2', '\x2', '\x2', '\x42', '\x43', '\a', 
		'_', '\x2', '\x2', '\x43', '\f', '\x3', '\x2', '\x2', '\x2', '\x44', '\x45', 
		'\a', '<', '\x2', '\x2', '\x45', '\xE', '\x3', '\x2', '\x2', '\x2', '\x46', 
		'G', '\a', '}', '\x2', '\x2', 'G', '\x10', '\x3', '\x2', '\x2', '\x2', 
		'H', 'I', '\a', '\x7F', '\x2', '\x2', 'I', '\x12', '\x3', '\x2', '\x2', 
		'\x2', 'J', 'K', '\a', '>', '\x2', '\x2', 'K', 'L', '\a', '>', '\x2', 
		'\x2', 'L', '\x14', '\x3', '\x2', '\x2', '\x2', 'M', 'N', '\a', 'u', '\x2', 
		'\x2', 'N', 'O', '\a', 'v', '\x2', '\x2', 'O', 'P', '\a', '\x63', '\x2', 
		'\x2', 'P', 'Q', '\a', 'v', '\x2', '\x2', 'Q', 'R', '\a', 'g', '\x2', 
		'\x2', 'R', '\x16', '\x3', '\x2', '\x2', '\x2', 'S', 'T', '\a', 'U', '\x2', 
		'\x2', 'T', 'U', '\a', 'v', '\x2', '\x2', 'U', 'V', '\a', '\x63', '\x2', 
		'\x2', 'V', 'W', '\a', 'v', '\x2', '\x2', 'W', 'X', '\a', 'g', '\x2', 
		'\x2', 'X', '\x18', '\x3', '\x2', '\x2', '\x2', 'Y', 'Z', '\a', '\x63', 
		'\x2', '\x2', 'Z', '[', '\a', 'u', '\x2', '\x2', '[', '\x1A', '\x3', '\x2', 
		'\x2', '\x2', '\\', ']', '\a', '@', '\x2', '\x2', ']', '^', '\a', '@', 
		'\x2', '\x2', '^', '\x1C', '\x3', '\x2', '\x2', '\x2', '_', '`', '\a', 
		'j', '\x2', '\x2', '`', '\x61', '\a', 'k', '\x2', '\x2', '\x61', '\x62', 
		'\a', '\x66', '\x2', '\x2', '\x62', '\x63', '\a', 'g', '\x2', '\x2', '\x63', 
		'\x64', '\a', '\"', '\x2', '\x2', '\x64', '\x65', '\a', 'g', '\x2', '\x2', 
		'\x65', '\x66', '\a', 'o', '\x2', '\x2', '\x66', 'g', '\a', 'r', '\x2', 
		'\x2', 'g', 'h', '\a', 'v', '\x2', '\x2', 'h', 'i', '\a', '{', '\x2', 
		'\x2', 'i', 'j', '\a', '\"', '\x2', '\x2', 'j', 'k', '\a', '\x66', '\x2', 
		'\x2', 'k', 'l', '\a', 'g', '\x2', '\x2', 'l', 'm', '\a', 'u', '\x2', 
		'\x2', 'm', 'n', '\a', '\x65', '\x2', '\x2', 'n', 'o', '\a', 't', '\x2', 
		'\x2', 'o', 'p', '\a', 'k', '\x2', '\x2', 'p', 'q', '\a', 'r', '\x2', 
		'\x2', 'q', 'r', '\a', 'v', '\x2', '\x2', 'r', 's', '\a', 'k', '\x2', 
		'\x2', 's', 't', '\a', 'q', '\x2', '\x2', 't', 'u', '\a', 'p', '\x2', 
		'\x2', 'u', '\x1E', '\x3', '\x2', '\x2', '\x2', 'v', 'w', '\a', 'u', '\x2', 
		'\x2', 'w', 'x', '\a', '\x65', '\x2', '\x2', 'x', 'y', '\a', '\x63', '\x2', 
		'\x2', 'y', 'z', '\a', 'n', '\x2', '\x2', 'z', '{', '\a', 'g', '\x2', 
		'\x2', '{', '|', '\a', '\"', '\x2', '\x2', '|', ' ', '\x3', '\x2', '\x2', 
		'\x2', '}', '~', '\t', '\x2', '\x2', '\x2', '~', '\"', '\x3', '\x2', '\x2', 
		'\x2', '\x7F', '\x80', '\a', '\x42', '\x2', '\x2', '\x80', '\x81', '\a', 
		'u', '\x2', '\x2', '\x81', '\x82', '\a', 'v', '\x2', '\x2', '\x82', '\x83', 
		'\a', '\x63', '\x2', '\x2', '\x83', '\x84', '\a', 't', '\x2', '\x2', '\x84', 
		'\x85', '\a', 'v', '\x2', '\x2', '\x85', '\x86', '\a', 'w', '\x2', '\x2', 
		'\x86', '\x87', '\a', 'o', '\x2', '\x2', '\x87', '\x88', '\a', 'n', '\x2', 
		'\x2', '\x88', '$', '\x3', '\x2', '\x2', '\x2', '\x89', '\x8A', '\a', 
		'\x42', '\x2', '\x2', '\x8A', '\x8B', '\a', 'g', '\x2', '\x2', '\x8B', 
		'\x8C', '\a', 'p', '\x2', '\x2', '\x8C', '\x8D', '\a', '\x66', '\x2', 
		'\x2', '\x8D', '\x8E', '\a', 'w', '\x2', '\x2', '\x8E', '\x8F', '\a', 
		'o', '\x2', '\x2', '\x8F', '\x90', '\a', 'n', '\x2', '\x2', '\x90', '&', 
		'\x3', '\x2', '\x2', '\x2', '\x91', '\x93', '\t', '\x3', '\x2', '\x2', 
		'\x92', '\x91', '\x3', '\x2', '\x2', '\x2', '\x93', '\x94', '\x3', '\x2', 
		'\x2', '\x2', '\x94', '\x92', '\x3', '\x2', '\x2', '\x2', '\x94', '\x95', 
		'\x3', '\x2', '\x2', '\x2', '\x95', '(', '\x3', '\x2', '\x2', '\x2', '\x96', 
		'\x98', '\t', '\x4', '\x2', '\x2', '\x97', '\x96', '\x3', '\x2', '\x2', 
		'\x2', '\x98', '\x99', '\x3', '\x2', '\x2', '\x2', '\x99', '\x97', '\x3', 
		'\x2', '\x2', '\x2', '\x99', '\x9A', '\x3', '\x2', '\x2', '\x2', '\x9A', 
		'*', '\x3', '\x2', '\x2', '\x2', '\x9B', '\xA0', '\x5', '!', '\x11', '\x2', 
		'\x9C', '\x9F', '\x5', '!', '\x11', '\x2', '\x9D', '\x9F', '\x5', '-', 
		'\x17', '\x2', '\x9E', '\x9C', '\x3', '\x2', '\x2', '\x2', '\x9E', '\x9D', 
		'\x3', '\x2', '\x2', '\x2', '\x9F', '\xA2', '\x3', '\x2', '\x2', '\x2', 
		'\xA0', '\x9E', '\x3', '\x2', '\x2', '\x2', '\xA0', '\xA1', '\x3', '\x2', 
		'\x2', '\x2', '\xA1', ',', '\x3', '\x2', '\x2', '\x2', '\xA2', '\xA0', 
		'\x3', '\x2', '\x2', '\x2', '\xA3', '\xA4', '\t', '\x5', '\x2', '\x2', 
		'\xA4', '.', '\x3', '\x2', '\x2', '\x2', '\xA5', '\xA6', '\a', '^', '\x2', 
		'\x2', '\xA6', '\xA7', '\v', '\x2', '\x2', '\x2', '\xA7', '\x30', '\x3', 
		'\x2', '\x2', '\x2', '\xA8', '\xA9', '\n', '\x6', '\x2', '\x2', '\xA9', 
		'\x32', '\x3', '\x2', '\x2', '\x2', '\xAA', '\xAD', '\x5', '/', '\x18', 
		'\x2', '\xAB', '\xAD', '\x5', '\x31', '\x19', '\x2', '\xAC', '\xAA', '\x3', 
		'\x2', '\x2', '\x2', '\xAC', '\xAB', '\x3', '\x2', '\x2', '\x2', '\xAD', 
		'\x34', '\x3', '\x2', '\x2', '\x2', '\xAE', '\xB2', '\a', '$', '\x2', 
		'\x2', '\xAF', '\xB1', '\x5', '\x33', '\x1A', '\x2', '\xB0', '\xAF', '\x3', 
		'\x2', '\x2', '\x2', '\xB1', '\xB4', '\x3', '\x2', '\x2', '\x2', '\xB2', 
		'\xB0', '\x3', '\x2', '\x2', '\x2', '\xB2', '\xB3', '\x3', '\x2', '\x2', 
		'\x2', '\xB3', '\xB5', '\x3', '\x2', '\x2', '\x2', '\xB4', '\xB2', '\x3', 
		'\x2', '\x2', '\x2', '\xB5', '\xB6', '\a', '$', '\x2', '\x2', '\xB6', 
		'\x36', '\x3', '\x2', '\x2', '\x2', '\t', '\x2', '\x94', '\x99', '\x9E', 
		'\xA0', '\xAC', '\xB2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
